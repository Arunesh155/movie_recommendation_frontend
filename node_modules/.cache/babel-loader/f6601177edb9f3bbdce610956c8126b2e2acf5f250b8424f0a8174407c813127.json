{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\Full Stack\\\\movie\\\\src\\\\components\\\\MovieCard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { FavoritesContext } from '../FavoritesContext';\nimport './MovieCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = ({\n  movie\n}) => {\n  _s();\n  const {\n    favorites,\n    addFavorite,\n    removeFavorite\n  } = useContext(FavoritesContext);\n  const isFavorite = favorites.some(fav => fav.id === movie.id);\n\n  // Function to handle favorite button click\n  const handleFavoriteClick = e => {\n    e.stopPropagation(); // Prevent click event from triggering on the card\n    if (isFavorite) {\n      removeFavorite(movie.id); // Remove from favorites\n    } else {\n      addFavorite(movie); // Add to favorites\n    }\n  };\n\n  // Optional: Function to handle enlarging the movie\n  const handleCardClick = () => {\n    // You can implement enlarging functionality here if needed\n    console.log(`Movie clicked: ${movie.title}`); // For now, just log the title\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    onClick: handleCardClick,\n    children: [movie.poster_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placeholder\",\n      children: \"No Image Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) // Placeholder if no image\n    , /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavoriteClick,\n      children: isFavorite ? 'Remove from Favorites' : 'Add to Favorites'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieCard, \"x/zWES9sTMIgSpBu8Zapa+CW2UE=\");\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","useContext","FavoritesContext","jsxDEV","_jsxDEV","MovieCard","movie","_s","favorites","addFavorite","removeFavorite","isFavorite","some","fav","id","handleFavoriteClick","e","stopPropagation","handleCardClick","console","log","title","className","onClick","children","poster_path","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Documents/Full Stack/movie/src/components/MovieCard.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { FavoritesContext } from '../FavoritesContext';\r\nimport './MovieCard.css';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n    const { favorites, addFavorite, removeFavorite } = useContext(FavoritesContext);\r\n    const isFavorite = favorites.some(fav => fav.id === movie.id);\r\n\r\n    // Function to handle favorite button click\r\n    const handleFavoriteClick = (e) => {\r\n        e.stopPropagation(); // Prevent click event from triggering on the card\r\n        if (isFavorite) {\r\n            removeFavorite(movie.id); // Remove from favorites\r\n        } else {\r\n            addFavorite(movie); // Add to favorites\r\n        }\r\n    };\r\n\r\n    // Optional: Function to handle enlarging the movie\r\n    const handleCardClick = () => {\r\n        // You can implement enlarging functionality here if needed\r\n        console.log(`Movie clicked: ${movie.title}`); // For now, just log the title\r\n    };\r\n\r\n    return (\r\n        <div className=\"movie-card\" onClick={handleCardClick}>\r\n            {movie.poster_path ? (\r\n                <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\r\n            ) : (\r\n                <div className=\"placeholder\">No Image Available</div> // Placeholder if no image\r\n            )}\r\n            <h3>{movie.title}</h3>\r\n            <button onClick={handleFavoriteClick}>\r\n                {isFavorite ? 'Remove from Favorites' : 'Add to Favorites'}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGT,UAAU,CAACC,gBAAgB,CAAC;EAC/E,MAAMS,UAAU,GAAGH,SAAS,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKR,KAAK,CAACQ,EAAE,CAAC;;EAE7D;EACA,MAAMC,mBAAmB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;IACrB,IAAIN,UAAU,EAAE;MACZD,cAAc,CAACJ,KAAK,CAACQ,EAAE,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACHL,WAAW,CAACH,KAAK,CAAC,CAAC,CAAC;IACxB;EACJ,CAAC;;EAED;EACA,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkBd,KAAK,CAACe,KAAK,EAAE,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,oBACIjB,OAAA;IAAKkB,SAAS,EAAC,YAAY;IAACC,OAAO,EAAEL,eAAgB;IAAAM,QAAA,GAChDlB,KAAK,CAACmB,WAAW,gBACdrB,OAAA;MAAKsB,GAAG,EAAE,mCAAmCpB,KAAK,CAACmB,WAAW,EAAG;MAACE,GAAG,EAAErB,KAAK,CAACe;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEtF3B,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAAAE,QAAA,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC;IACzD,eACD3B,OAAA;MAAAoB,QAAA,EAAKlB,KAAK,CAACe;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtB3B,OAAA;MAAQmB,OAAO,EAAER,mBAAoB;MAAAS,QAAA,EAChCb,UAAU,GAAG,uBAAuB,GAAG;IAAkB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACxB,EAAA,CAjCIF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}