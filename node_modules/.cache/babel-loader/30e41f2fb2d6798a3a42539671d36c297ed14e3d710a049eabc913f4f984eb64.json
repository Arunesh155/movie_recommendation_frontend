{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\Full Stack\\\\movie\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MovieList from './components/MovieList'; // Ensure you have this component\nimport SearchBar from './components/SearchBar'; // Ensure you have this component\nimport FilterBar from './components/FilterBar'; // Ensure you have this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n\n  // Function to fetch Tamil movies\n  const fetchMovies = async () => {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=ta`);\n      setMovies(response.data.results);\n    } catch (error) {\n      console.error(\"Error fetching Tamil movies:\", error);\n    }\n  };\n\n  // Function to fetch genres\n  const fetchGenres = async () => {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`);\n      setGenres(response.data.genres);\n    } catch (error) {\n      console.error(\"Error fetching genres:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMovies(); // Call to fetch Tamil movies\n    fetchGenres(); // Call to fetch movie genres\n  }, []); // Empty dependency array to run only on mount\n\n  // Filter movies based on search query\n  const filteredMovies = movies.filter(movie => movie.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tamil Movie Recommendation App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      genres: genres,\n      selectedGenre: selectedGenre,\n      setSelectedGenre: setSelectedGenre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: filteredMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"2TNQsTWWikRGZDm6pLxtSTkA+Ag=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieList","SearchBar","FilterBar","jsxDEV","_jsxDEV","App","_s","movies","setMovies","searchQuery","setSearchQuery","genres","setGenres","selectedGenre","setSelectedGenre","fetchMovies","response","get","process","env","REACT_APP_TMDB_API_KEY","data","results","error","console","fetchGenres","filteredMovies","filter","movie","title","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Documents/Full Stack/movie/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MovieList from './components/MovieList'; // Ensure you have this component\nimport SearchBar from './components/SearchBar'; // Ensure you have this component\nimport FilterBar from './components/FilterBar'; // Ensure you have this component\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [genres, setGenres] = useState([]);\n    const [selectedGenre, setSelectedGenre] = useState('');\n\n    // Function to fetch Tamil movies\n    const fetchMovies = async () => {\n        try {\n            const response = await axios.get(\n                `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=ta`\n            );\n            setMovies(response.data.results);\n        } catch (error) {\n            console.error(\"Error fetching Tamil movies:\", error);\n        }\n    };\n\n    // Function to fetch genres\n    const fetchGenres = async () => {\n        try {\n            const response = await axios.get(\n                `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\n            );\n            setGenres(response.data.genres);\n        } catch (error) {\n            console.error(\"Error fetching genres:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchMovies();  // Call to fetch Tamil movies\n        fetchGenres();  // Call to fetch movie genres\n    }, []); // Empty dependency array to run only on mount\n\n    // Filter movies based on search query\n    const filteredMovies = movies.filter(movie =>\n        movie.title.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div className=\"App\">\n            <h1>Tamil Movie Recommendation App</h1>\n            <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n            <FilterBar genres={genres} selectedGenre={selectedGenre} setSelectedGenre={setSelectedGenre} />\n            <MovieList movies={filteredMovies} />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}