{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\Full Stack\\\\movie\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport FilterBar from './FilterBar';\nimport MovieList from './MovieList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TMDB_API_KEY = '82bf8e7015e539b6b3839975fa59392a'; // Replace with your TMDB API key\n\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${TMDB_API_KEY}&language=en-US`);\n        const filteredGenres = response.data.genres.filter(genre => ['Comedy', 'Crime', 'Horror'].includes(genre.name));\n        setGenres(filteredGenres);\n      } catch (error) {\n        setError('Error fetching genres.');\n      }\n    };\n    fetchGenres();\n  }, []);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        let genreParam = selectedGenre ? `&with_genres=${selectedGenre}` : '';\n        let searchParam = searchQuery ? `&query=${searchQuery}` : '';\n        const response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&with_original_language=ta&page=${page}${genreParam}${searchParam}`);\n        setMovies(prevMovies => page === 1 ? response.data.results : [...prevMovies, ...response.data.results]);\n        setTotalPages(response.data.total_pages);\n      } catch (error) {\n        setError('Error fetching movies. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    const delayDebounceFn = setTimeout(() => {\n      fetchMovies();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [selectedGenre, searchQuery, page]);\n  const filteredMovies = searchQuery ? movies.filter(movie => movie.title.toLowerCase().includes(searchQuery.toLowerCase())) : movies;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tamil Movie Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      genres: genres,\n      selectedGenre: selectedGenre,\n      setSelectedGenre: setSelectedGenre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this) : filteredMovies.length > 0 ? /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: filteredMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), page < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page + 1),\n        children: \"Load More Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), page < totalPages && !error && !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page + 1),\n      children: \"Load More Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"mBYkOxPKzO3w/6F1TFua8MPvrvA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchBar","FilterBar","MovieList","jsxDEV","_jsxDEV","TMDB_API_KEY","App","_s","movies","setMovies","genres","setGenres","selectedGenre","setSelectedGenre","searchQuery","setSearchQuery","page","setPage","totalPages","setTotalPages","error","setError","loading","setLoading","fetchGenres","response","get","filteredGenres","data","filter","genre","includes","name","fetchMovies","genreParam","searchParam","prevMovies","results","total_pages","delayDebounceFn","setTimeout","clearTimeout","filteredMovies","movie","title","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Documents/Full Stack/movie/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar';\nimport FilterBar from './FilterBar';\nimport MovieList from './MovieList';\n\nconst TMDB_API_KEY = '82bf8e7015e539b6b3839975fa59392a'; // Replace with your TMDB API key\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [genres, setGenres] = useState([]);\n    const [selectedGenre, setSelectedGenre] = useState('');\n    const [searchQuery, setSearchQuery] = useState('');\n    const [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchGenres = async () => {\n            try {\n                const response = await axios.get(\n                    `https://api.themoviedb.org/3/genre/movie/list?api_key=${TMDB_API_KEY}&language=en-US`\n                );\n                const filteredGenres = response.data.genres.filter((genre) =>\n                    ['Comedy', 'Crime', 'Horror'].includes(genre.name)\n                );\n                setGenres(filteredGenres);\n            } catch (error) {\n                setError('Error fetching genres.');\n            }\n        };\n\n        fetchGenres();\n    }, []);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            setLoading(true);\n            setError(null);\n            try {\n                let genreParam = selectedGenre ? `&with_genres=${selectedGenre}` : '';\n                let searchParam = searchQuery ? `&query=${searchQuery}` : '';\n\n                const response = await axios.get(\n                    `https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&with_original_language=ta&page=${page}${genreParam}${searchParam}`\n                );\n\n                setMovies((prevMovies) => \n                    page === 1 ? response.data.results : [...prevMovies, ...response.data.results]\n                );\n                setTotalPages(response.data.total_pages);\n            } catch (error) {\n                setError('Error fetching movies. Please try again later.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        const delayDebounceFn = setTimeout(() => {\n            fetchMovies();\n        }, 500);\n\n        return () => clearTimeout(delayDebounceFn);\n    }, [selectedGenre, searchQuery, page]);\n\n    const filteredMovies = searchQuery\n        ? movies.filter((movie) => \n            movie.title.toLowerCase().includes(searchQuery.toLowerCase())\n        )\n        : movies;\n\n    return (\n        <div className=\"app-container\">\n            <h1>Tamil Movie Recommendations</h1>\n            <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n            <FilterBar genres={genres} selectedGenre={selectedGenre} setSelectedGenre={setSelectedGenre} />\n            \n            {loading ? (\n                <p>Loading movies...</p>\n            ) : error ? (\n                <p>{error}</p>\n            ) : filteredMovies.length > 0 ? (\n                <MovieList movies={filteredMovies} />\n            ) : (\n                <div>\n                    <p>No movies found.</p>\n                    {page < totalPages && (\n                        <button onClick={() => setPage(page + 1)}>Load More Movies</button>\n                    )}\n                </div>\n            )}\n\n            {page < totalPages && !error && !loading && (\n                <button onClick={() => setPage(page + 1)}>Load More Movies</button>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}