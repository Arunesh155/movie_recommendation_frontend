{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\Full Stack\\\\movie\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieList from './components/MovieList';\nimport FilterBar from './components/FilterBar';\nimport SearchBar from './components/SearchBar';\nimport FavoritesPage from './components/FavoritesPage';\nimport { FavoritesProvider } from './FavoritesContext';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TMDB_API_KEY = '82bf8e7015e539b6b3839975fa59392a'; // Replace with your TMDB API Key\n\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [favorites, setFavorites] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n\n  // Genres to display as filter options\n  const selectedGenresList = [{\n    id: 28,\n    name: 'Action'\n  }, {\n    id: 35,\n    name: 'Comedy'\n  }, {\n    id: 18,\n    name: 'Drama'\n  }, {\n    id: 27,\n    name: 'Horror'\n  }, {\n    id: 53,\n    name: 'Thriller'\n  }, {\n    id: 80,\n    name: 'Crime'\n  }, {\n    id: 10749,\n    name: 'Romance'\n  }];\n\n  // Fetch movies based on genre or search query\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        let response;\n        if (searchQuery) {\n          // Use the search endpoint if there's a search query\n          response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${searchQuery}&with_original_language=ta`);\n        } else {\n          // Use the discover endpoint for genre filtering\n          let genreParam = selectedGenre ? `&with_genres=${selectedGenre}` : '';\n          response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&with_original_language=ta${genreParam}`);\n        }\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, [selectedGenre, searchQuery]);\n\n  // Function to toggle a movie as a favorite\n  const toggleFavorite = movie => {\n    if (favorites.some(favorite => favorite.id === movie.id)) {\n      setFavorites(favorites.filter(fav => fav.id !== movie.id));\n    } else {\n      setFavorites([...favorites, movie]);\n    }\n  };\n\n  // Clear search query function\n  const clearSearch = () => {\n    setSearchQuery('');\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tamil Movie Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFavorites(false),\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFavorites(true),\n          children: \"Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), !showFavorites ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar-container\",\n          children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n            searchQuery: searchQuery,\n            setSearchQuery: setSearchQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearSearch,\n            className: \"clear-search-button\",\n            children: \"Clear Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n          genres: selectedGenresList,\n          selectedGenre: selectedGenre,\n          setSelectedGenre: setSelectedGenre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n          movies: movies,\n          toggleFavorite: toggleFavorite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(FavoritesPage, {\n        favorites: favorites,\n        toggleFavorite: toggleFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"88UYaIHTObvXMrtFcN6bL0dUTs4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieList","FilterBar","SearchBar","FavoritesPage","FavoritesProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","TMDB_API_KEY","App","_s","movies","setMovies","selectedGenre","setSelectedGenre","searchQuery","setSearchQuery","favorites","setFavorites","showFavorites","setShowFavorites","selectedGenresList","id","name","fetchMovies","response","get","genreParam","data","results","error","console","toggleFavorite","movie","some","favorite","filter","fav","clearSearch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","genres","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Documents/Full Stack/movie/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieList from './components/MovieList';\nimport FilterBar from './components/FilterBar';\nimport SearchBar from './components/SearchBar';\nimport FavoritesPage from './components/FavoritesPage';\nimport { FavoritesProvider } from './FavoritesContext';\nimport './App.css';\n\nconst TMDB_API_KEY = '82bf8e7015e539b6b3839975fa59392a'; // Replace with your TMDB API Key\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [selectedGenre, setSelectedGenre] = useState('');\n    const [searchQuery, setSearchQuery] = useState('');\n    const [favorites, setFavorites] = useState([]);\n    const [showFavorites, setShowFavorites] = useState(false);\n\n    // Genres to display as filter options\n    const selectedGenresList = [\n        { id: 28, name: 'Action' },\n        { id: 35, name: 'Comedy' },\n        { id: 18, name: 'Drama' },\n        { id: 27, name: 'Horror' },\n        { id: 53, name: 'Thriller' },\n        { id: 80, name: 'Crime' },\n        { id: 10749, name: 'Romance' },\n    ];\n\n    // Fetch movies based on genre or search query\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                let response;\n\n                if (searchQuery) {\n                    // Use the search endpoint if there's a search query\n                    response = await axios.get(\n                        `https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${searchQuery}&with_original_language=ta`\n                    );\n                } else {\n                    // Use the discover endpoint for genre filtering\n                    let genreParam = selectedGenre ? `&with_genres=${selectedGenre}` : '';\n                    response = await axios.get(\n                        `https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&with_original_language=ta${genreParam}`\n                    );\n                }\n\n                setMovies(response.data.results);\n            } catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n        };\n\n        fetchMovies();\n    }, [selectedGenre, searchQuery]);\n\n    // Function to toggle a movie as a favorite\n    const toggleFavorite = (movie) => {\n        if (favorites.some(favorite => favorite.id === movie.id)) {\n            setFavorites(favorites.filter(fav => fav.id !== movie.id));\n        } else {\n            setFavorites([...favorites, movie]);\n        }\n    };\n\n    // Clear search query function\n    const clearSearch = () => {\n        setSearchQuery('');\n    };\n\n    return (\n        <FavoritesProvider>\n            <div className=\"app-container\">\n                <h1>Tamil Movie Recommendations</h1>\n\n                {/* Navigation Links */}\n                <div className=\"nav-links\">\n                    <button onClick={() => setShowFavorites(false)}>Home</button>\n                    <button onClick={() => setShowFavorites(true)}>Favorites</button>\n                </div>\n\n                {/* Conditional Rendering based on showFavorites state */}\n                {!showFavorites ? (\n                    <>\n                        {/* Search bar for searching movies */}\n                        <div className=\"search-bar-container\">\n                            <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n                            {/* Clear Search Button */}\n                            <button onClick={clearSearch} className=\"clear-search-button\">Clear Search</button>\n                        </div>\n\n                        {/* Filter bar for filtering by genre */}\n                        <FilterBar genres={selectedGenresList} selectedGenre={selectedGenre} setSelectedGenre={setSelectedGenre} />\n\n                        {/* List of movies with option to add to favorites */}\n                        <MovieList movies={movies} toggleFavorite={toggleFavorite} />\n                    </>\n                ) : (\n                    <FavoritesPage favorites={favorites} toggleFavorite={toggleFavorite} />\n                )}\n            </div>\n        </FavoritesProvider>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}