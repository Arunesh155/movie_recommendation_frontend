{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arunesh\\\\Music\\\\mini\\\\movie_recommendation\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieList from './components/MovieList';\nimport FilterBar from './components/FilterBar';\nimport SearchBar from './components/SearchBar';\nimport FavoritesPage from './components/FavoritesPage';\nimport { FavoritesProvider } from './FavoritesContext';\nimport Login from './components/Login';\nimport SignUp from './components/Signup';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TMDB_API_KEY = '82bf8e7015e539b6b3839975fa59392a'; // Replace with your TMDB API Key\n\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('ta'); // Default to Tamil\n  const [searchQuery, setSearchQuery] = useState('');\n  const [favorites, setFavorites] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [isUserSignedUp, setIsUserSignedUp] = useState(false);\n  const [currentUserId, setCurrentUserId] = useState(null);\n  const selectedGenresList = [{\n    id: 28,\n    name: 'Action'\n  }, {\n    id: 35,\n    name: 'Comedy'\n  }, {\n    id: 18,\n    name: 'Drama'\n  }, {\n    id: 27,\n    name: 'Horror'\n  }, {\n    id: 53,\n    name: 'Thriller'\n  }, {\n    id: 80,\n    name: 'Crime'\n  }, {\n    id: 10749,\n    name: 'Romance'\n  }];\n  const selectedLanguagesList = [{\n    code: 'ta',\n    name: 'Tamil'\n  }, {\n    code: 'te',\n    name: 'Telugu'\n  }, {\n    code: 'hi',\n    name: 'Hindi'\n  }, {\n    code: 'ml',\n    name: 'Malayalam'\n  }, {\n    code: 'en',\n    name: 'English'\n  }, {\n    code: 'kn',\n    name: 'Kannada'\n  }];\n\n  // Fetch movies\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        let movieResults = [];\n        const totalPages = 1; // Limit to 1 page for a total of 10 results\n\n        for (let currentPage = 1; currentPage <= totalPages; currentPage++) {\n          let response;\n          if (searchQuery) {\n            response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${searchQuery}&with_original_language=${selectedLanguage}&page=${currentPage}`);\n          } else {\n            let genreParam = selectedGenre ? `&with_genres=${selectedGenre}` : '';\n            response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}${genreParam}&with_original_language=${selectedLanguage}&page=${currentPage}`);\n          }\n          const fetchedMovies = response.data.results;\n          const tamilMovies = fetchedMovies.filter(movie => movie.original_language === selectedLanguage);\n\n          // Limit to 10 movies\n          movieResults = [...movieResults, ...tamilMovies.slice(0, 20 - movieResults.length)];\n          if (movieResults.length >= 20) {\n            break; // Stop fetching if we already have 10 movies\n          }\n        }\n        setMovies(movieResults);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, [selectedGenre, searchQuery, selectedLanguage]);\n\n  // Load favorites from localStorage\n  const loadFavorites = userId => {\n    const storedFavorites = localStorage.getItem(`favorites_${userId}`);\n    if (storedFavorites) {\n      setFavorites(JSON.parse(storedFavorites));\n    }\n  };\n\n  // Save favorites to localStorage\n  const saveFavorites = (userId, updatedFavorites) => {\n    localStorage.setItem(`favorites_${userId}`, JSON.stringify(updatedFavorites));\n  };\n\n  // Handle login\n  const handleLogin = userId => {\n    setIsLoggedIn(true);\n    setCurrentUserId(userId);\n    loadFavorites(userId); // Load favorites after login\n  };\n\n  // Toggle favorite movie\n  const toggleFavorite = movie => {\n    let updatedFavorites;\n    if (favorites.some(fav => fav.id === movie.id)) {\n      updatedFavorites = favorites.filter(fav => fav.id !== movie.id);\n    } else {\n      updatedFavorites = [...favorites, movie];\n    }\n    setFavorites(updatedFavorites);\n    saveFavorites(currentUserId, updatedFavorites); // Save to localStorage\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('userId');\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setCurrentUserId(null);\n    setFavorites([]);\n  };\n\n  // Clear search input\n  const clearSearch = () => {\n    setSearchQuery('');\n    setMovies([]);\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: '\"Poppins\", sans-serif'\n      },\n      children: !isLoggedIn ? !isSignUp ? /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin,\n        onToggleSignUp: () => setIsSignUp(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(SignUp, {\n        onSignUp: () => {\n          setIsUserSignedUp(true);\n          setIsLoggedIn(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: 'center',\n            color: '#ff6b00',\n            fontSize: '2.5rem',\n            marginBottom: '30px',\n            textShadow: '2px 2px 4px rgba(0, 0, 0, 0.2)'\n          },\n          children: \"Movie Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '20px',\n            right: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            style: {\n              backgroundColor: '#ff6b00',\n              color: '#fff',\n              padding: '10px 20px',\n              borderRadius: '5px',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '1.1em',\n              transition: 'background-color 0.3s'\n            },\n            onMouseOver: e => e.target.style.backgroundColor = '#e55e00',\n            onMouseOut: e => e.target.style.backgroundColor = '#ff6b00',\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            margin: '20px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowFavorites(false),\n            style: {\n              backgroundColor: showFavorites ? '#ddd' : '#ff6b00',\n              color: '#fff',\n              padding: '10px 15px',\n              borderRadius: '8px',\n              marginRight: '10px',\n              cursor: 'pointer',\n              border: 'none',\n              transition: 'background-color 0.3s'\n            },\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowFavorites(true),\n            style: {\n              backgroundColor: showFavorites ? '#ff6b00' : '#ddd',\n              color: '#fff',\n              padding: '10px 15px',\n              borderRadius: '8px',\n              cursor: 'pointer',\n              border: 'none',\n              transition: 'background-color 0.3s'\n            },\n            children: \"Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"language-select\",\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Select Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"language-select\",\n            value: selectedLanguage,\n            onChange: e => setSelectedLanguage(e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: '1px solid #ccc'\n            },\n            children: selectedLanguagesList.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang.code,\n              children: lang.name\n            }, lang.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), !showFavorites ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              marginBottom: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(SearchBar, {\n              searchQuery: searchQuery,\n              setSearchQuery: setSearchQuery,\n              clearSearch: clearSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n            selectedGenresList: selectedGenresList,\n            setSelectedGenre: setSelectedGenre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n            movies: movies,\n            favorites: favorites,\n            onToggleFavorite: toggleFavorite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(FavoritesPage, {\n          favorites: favorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"ss5cnA580oiggJJrPbu+NvWVOf8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieList","FilterBar","SearchBar","FavoritesPage","FavoritesProvider","Login","SignUp","jsxDEV","_jsxDEV","Fragment","_Fragment","TMDB_API_KEY","App","_s","movies","setMovies","selectedGenre","setSelectedGenre","selectedLanguage","setSelectedLanguage","searchQuery","setSearchQuery","favorites","setFavorites","showFavorites","setShowFavorites","isLoggedIn","setIsLoggedIn","isSignUp","setIsSignUp","isUserSignedUp","setIsUserSignedUp","currentUserId","setCurrentUserId","selectedGenresList","id","name","selectedLanguagesList","code","fetchMovies","movieResults","totalPages","currentPage","response","get","genreParam","fetchedMovies","data","results","tamilMovies","filter","movie","original_language","slice","length","error","console","loadFavorites","userId","storedFavorites","localStorage","getItem","JSON","parse","saveFavorites","updatedFavorites","setItem","stringify","handleLogin","toggleFavorite","some","fav","handleLogout","removeItem","clearSearch","children","style","fontFamily","onLogin","onToggleSignUp","fileName","_jsxFileName","lineNumber","columnNumber","onSignUp","textAlign","color","fontSize","marginBottom","textShadow","position","top","right","onClick","backgroundColor","padding","borderRadius","border","cursor","transition","onMouseOver","e","target","onMouseOut","display","justifyContent","margin","marginRight","htmlFor","value","onChange","map","lang","alignItems","onToggleFavorite","_c","$RefreshReg$"],"sources":["C:/Users/Arunesh/Music/mini/movie_recommendation/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieList from './components/MovieList';\nimport FilterBar from './components/FilterBar';\nimport SearchBar from './components/SearchBar';\nimport FavoritesPage from './components/FavoritesPage';\nimport { FavoritesProvider } from './FavoritesContext';\nimport Login from './components/Login';\nimport SignUp from './components/Signup';\n\nconst TMDB_API_KEY = '82bf8e7015e539b6b3839975fa59392a'; // Replace with your TMDB API Key\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [selectedGenre, setSelectedGenre] = useState('');\n    const [selectedLanguage, setSelectedLanguage] = useState('ta'); // Default to Tamil\n    const [searchQuery, setSearchQuery] = useState('');\n    const [favorites, setFavorites] = useState([]);\n    const [showFavorites, setShowFavorites] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [isSignUp, setIsSignUp] = useState(false);\n    const [isUserSignedUp, setIsUserSignedUp] = useState(false);\n    const [currentUserId, setCurrentUserId] = useState(null);\n\n    const selectedGenresList = [\n        { id: 28, name: 'Action' },\n        { id: 35, name: 'Comedy' },\n        { id: 18, name: 'Drama' },\n        { id: 27, name: 'Horror' },\n        { id: 53, name: 'Thriller' },\n        { id: 80, name: 'Crime' },\n        { id: 10749, name: 'Romance' },\n    ];\n\n    const selectedLanguagesList = [\n        { code: 'ta', name: 'Tamil' },\n        { code: 'te', name: 'Telugu' },\n        { code: 'hi', name: 'Hindi' },\n        { code: 'ml', name: 'Malayalam' },\n        { code: 'en', name: 'English' },\n        { code: 'kn', name: 'Kannada' }\n    ];\n\n    // Fetch movies\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                let movieResults = [];\n                const totalPages = 1; // Limit to 1 page for a total of 10 results\n\n                for (let currentPage = 1; currentPage <= totalPages; currentPage++) {\n                    let response;\n\n                    if (searchQuery) {\n                        response = await axios.get(\n                            `https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${searchQuery}&with_original_language=${selectedLanguage}&page=${currentPage}`\n                        );\n                    } else {\n                        let genreParam = selectedGenre ? `&with_genres=${selectedGenre}` : '';\n                        response = await axios.get(\n                            `https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}${genreParam}&with_original_language=${selectedLanguage}&page=${currentPage}`\n                        );\n                    }\n\n                    const fetchedMovies = response.data.results;\n                    const tamilMovies = fetchedMovies.filter(movie => movie.original_language === selectedLanguage);\n\n                    // Limit to 10 movies\n                    movieResults = [...movieResults, ...tamilMovies.slice(0, 20 - movieResults.length)];\n\n                    if (movieResults.length >= 20) {\n                        break; // Stop fetching if we already have 10 movies\n                    }\n                }\n\n                setMovies(movieResults);\n            } catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n        };\n\n        fetchMovies();\n    }, [selectedGenre, searchQuery, selectedLanguage]);\n\n    // Load favorites from localStorage\n    const loadFavorites = (userId) => {\n        const storedFavorites = localStorage.getItem(`favorites_${userId}`);\n        if (storedFavorites) {\n            setFavorites(JSON.parse(storedFavorites));\n        }\n    };\n\n    // Save favorites to localStorage\n    const saveFavorites = (userId, updatedFavorites) => {\n        localStorage.setItem(`favorites_${userId}`, JSON.stringify(updatedFavorites));\n    };\n\n    // Handle login\n    const handleLogin = (userId) => {\n        setIsLoggedIn(true);\n        setCurrentUserId(userId);\n        loadFavorites(userId);  // Load favorites after login\n    };\n\n    // Toggle favorite movie\n    const toggleFavorite = (movie) => {\n        let updatedFavorites;\n        if (favorites.some(fav => fav.id === movie.id)) {\n            updatedFavorites = favorites.filter(fav => fav.id !== movie.id);\n        } else {\n            updatedFavorites = [...favorites, movie];\n        }\n        setFavorites(updatedFavorites);\n        saveFavorites(currentUserId, updatedFavorites);  // Save to localStorage\n    };\n\n    // Handle logout\n    const handleLogout = () => {\n        localStorage.removeItem('userId');\n        localStorage.removeItem('token');\n        setIsLoggedIn(false);\n        setCurrentUserId(null);\n        setFavorites([]);\n    };\n\n    // Clear search input\n    const clearSearch = () => {\n        setSearchQuery('');\n        setMovies([]);\n    };\n\n    return (\n        <FavoritesProvider>\n            <div\n                style={{\n                    fontFamily: '\"Poppins\", sans-serif',\n                }}\n            >\n                {!isLoggedIn ? (\n                    !isSignUp ? (\n                        <Login onLogin={handleLogin} onToggleSignUp={() => setIsSignUp(true)} />\n                    ) : (\n                        <SignUp\n                            onSignUp={() => {\n                                setIsUserSignedUp(true);\n                                setIsLoggedIn(true);\n                            }}\n                        />\n                    )\n                ) : (\n                    <>\n                        <h1\n                            style={{\n                                textAlign: 'center',\n                                color: '#ff6b00',\n                                fontSize: '2.5rem',\n                                marginBottom: '30px',\n                                textShadow: '2px 2px 4px rgba(0, 0, 0, 0.2)',\n                            }}\n                        >\n                            Movie Recommendations\n                        </h1>\n\n                        <div style={{ position: 'absolute', top: '20px', right: '20px' }}>\n                            <button\n                                onClick={handleLogout}\n                                style={{\n                                    backgroundColor: '#ff6b00',\n                                    color: '#fff',\n                                    padding: '10px 20px',\n                                    borderRadius: '5px',\n                                    border: 'none',\n                                    cursor: 'pointer',\n                                    fontSize: '1.1em',\n                                    transition: 'background-color 0.3s',\n                                }}\n                                onMouseOver={(e) => (e.target.style.backgroundColor = '#e55e00')}\n                                onMouseOut={(e) => (e.target.style.backgroundColor = '#ff6b00')}\n                            >\n                                Logout\n                            </button>\n                        </div>\n\n                        <div style={{ display: 'flex', justifyContent: 'center', margin: '20px 0' }}>\n                            <button\n                                onClick={() => setShowFavorites(false)}\n                                style={{\n                                    backgroundColor: showFavorites ? '#ddd' : '#ff6b00',\n                                    color: '#fff',\n                                    padding: '10px 15px',\n                                    borderRadius: '8px',\n                                    marginRight: '10px',\n                                    cursor: 'pointer',\n                                    border: 'none',\n                                    transition: 'background-color 0.3s',\n                                }}\n                            >\n                                Home\n                            </button>\n                            <button\n                                onClick={() => setShowFavorites(true)}\n                                style={{\n                                    backgroundColor: showFavorites ? '#ff6b00' : '#ddd',\n                                    color: '#fff',\n                                    padding: '10px 15px',\n                                    borderRadius: '8px',\n                                    cursor: 'pointer',\n                                    border: 'none',\n                                    transition: 'background-color 0.3s',\n                                }}\n                            >\n                                Favorites\n                            </button>\n                        </div>\n\n                        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>\n                            <label htmlFor=\"language-select\" style={{ marginRight: '10px' }}>Select Language:</label>\n                            <select\n                                id=\"language-select\"\n                                value={selectedLanguage}\n                                onChange={(e) => setSelectedLanguage(e.target.value)}\n                                style={{\n                                    padding: '10px',\n                                    borderRadius: '5px',\n                                    border: '1px solid #ccc',\n                                }}\n                            >\n                                {selectedLanguagesList.map(lang => (\n                                    <option key={lang.code} value={lang.code}>{lang.name}</option>\n                                ))}\n                            </select>\n                        </div>\n\n                        {!showFavorites ? (\n                            <>\n                                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '20px' }}>\n                                    <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} clearSearch={clearSearch} />\n                                </div>\n\n                                <FilterBar selectedGenresList={selectedGenresList} setSelectedGenre={setSelectedGenre} />\n                                <MovieList\n                                    movies={movies}\n                                    favorites={favorites}\n                                    onToggleFavorite={toggleFavorite}\n                                />\n                            </>\n                        ) : (\n                            <FavoritesPage favorites={favorites} />\n                        )}\n                    </>\n                )}\n            </div>\n        </FavoritesProvider>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}