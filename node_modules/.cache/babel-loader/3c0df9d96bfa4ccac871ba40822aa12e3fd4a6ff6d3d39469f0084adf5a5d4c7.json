{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\Full Stack\\\\movie\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport MovieList from './components/MovieList';\nimport FilterBar from './components/FilterBar';\nimport SearchBar from './components/SearchBar';\nimport { FavoritesProvider } from './FavoritesContext'; // Import FavoritesProvider\nimport FavoritesPage from './components/FavoritesPage'; // Import the FavoritesPage component\nimport './App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TMDB_API_KEY = 'YOUR_TMDB_API_KEY'; // Replace with your TMDB API Key\n\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  // Fetch genres once when the component loads\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${TMDB_API_KEY}&language=en-US`);\n        setGenres(response.data.genres.filter(genre => ['Comedy', 'Horror', 'Romance', 'Crime', 'Action', 'Drama', 'Thriller'].includes(genre.name)));\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n\n  // Fetch movies whenever selectedGenre, searchQuery, or page changes\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        let genreParam = selectedGenre ? `&with_genres=${selectedGenre}` : '';\n        let searchParam = searchQuery ? `&query=${searchQuery}` : '';\n        const response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&with_original_language=ta&page=${page}${genreParam}${searchParam}`);\n        setMovies(prevMovies => page === 1 ? response.data.results : [...prevMovies, ...response.data.results]);\n        setTotalPages(response.data.total_pages);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, [selectedGenre, searchQuery, page]);\n\n  // Handle search and clear functionality\n  const handleSearch = () => {\n    setPage(1); // Reset to the first page on search\n  };\n  const handleClear = () => {\n    setSearchQuery(''); // Clear the search input\n    setSelectedGenre(''); // Reset genre filter\n    setPage(1); // Reset to the first page\n  };\n\n  // Filtered movies based on search query\n  const filteredMovies = movies.filter(movie => movie.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(FavoritesProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tamil Movie Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/favorites\",\n            children: \"Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          searchQuery: searchQuery,\n          setSearchQuery: setSearchQuery,\n          onSearch: handleSearch,\n          onClear: handleClear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n          genres: genres,\n          selectedGenre: selectedGenre,\n          setSelectedGenre: setSelectedGenre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            children: /*#__PURE__*/_jsxDEV(MovieList, {\n              movies: filteredMovies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/favorites\",\n            component: FavoritesPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"SOWhmo/lIMjedn4OOBl2c8mu++k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Switch","Link","MovieList","FilterBar","SearchBar","FavoritesProvider","FavoritesPage","jsxDEV","_jsxDEV","TMDB_API_KEY","App","_s","movies","setMovies","genres","setGenres","selectedGenre","setSelectedGenre","searchQuery","setSearchQuery","page","setPage","totalPages","setTotalPages","fetchGenres","response","get","data","filter","genre","includes","name","error","console","fetchMovies","genreParam","searchParam","prevMovies","results","total_pages","handleSearch","handleClear","filteredMovies","movie","title","toLowerCase","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onSearch","onClear","path","exact","component","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Documents/Full Stack/movie/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport MovieList from './components/MovieList';\nimport FilterBar from './components/FilterBar';\nimport SearchBar from './components/SearchBar';\nimport { FavoritesProvider } from './FavoritesContext'; // Import FavoritesProvider\nimport FavoritesPage from './components/FavoritesPage'; // Import the FavoritesPage component\nimport './App.css'; // Import the CSS file\n\nconst TMDB_API_KEY = 'YOUR_TMDB_API_KEY'; // Replace with your TMDB API Key\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [genres, setGenres] = useState([]);\n    const [selectedGenre, setSelectedGenre] = useState('');\n    const [searchQuery, setSearchQuery] = useState('');\n    const [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n\n    // Fetch genres once when the component loads\n    useEffect(() => {\n        const fetchGenres = async () => {\n            try {\n                const response = await axios.get(\n                    `https://api.themoviedb.org/3/genre/movie/list?api_key=${TMDB_API_KEY}&language=en-US`\n                );\n                setGenres(response.data.genres.filter(genre =>\n                    ['Comedy', 'Horror', 'Romance', 'Crime', 'Action', 'Drama', 'Thriller'].includes(genre.name)\n                ));\n            } catch (error) {\n                console.error('Error fetching genres:', error);\n            }\n        };\n        fetchGenres();\n    }, []);\n\n    // Fetch movies whenever selectedGenre, searchQuery, or page changes\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                let genreParam = selectedGenre ? `&with_genres=${selectedGenre}` : '';\n                let searchParam = searchQuery ? `&query=${searchQuery}` : '';\n\n                const response = await axios.get(\n                    `https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&with_original_language=ta&page=${page}${genreParam}${searchParam}`\n                );\n\n                setMovies(prevMovies => page === 1 ? response.data.results : [...prevMovies, ...response.data.results]);\n                setTotalPages(response.data.total_pages);\n            } catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n        };\n\n        fetchMovies();\n    }, [selectedGenre, searchQuery, page]);\n\n    // Handle search and clear functionality\n    const handleSearch = () => {\n        setPage(1); // Reset to the first page on search\n    };\n\n    const handleClear = () => {\n        setSearchQuery(''); // Clear the search input\n        setSelectedGenre(''); // Reset genre filter\n        setPage(1); // Reset to the first page\n    };\n\n    // Filtered movies based on search query\n    const filteredMovies = movies.filter(movie =>\n        movie.title.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <FavoritesProvider>\n            <Router>\n                <div className=\"app-container\">\n                    <h1>Tamil Movie Recommendations</h1>\n                    <nav>\n                        <Link to=\"/\">Home</Link>\n                        <Link to=\"/favorites\">Favorites</Link>\n                    </nav>\n                    <SearchBar \n                        searchQuery={searchQuery} \n                        setSearchQuery={setSearchQuery} \n                        onSearch={handleSearch} \n                        onClear={handleClear} \n                    />\n                    <FilterBar \n                        genres={genres} \n                        selectedGenre={selectedGenre} \n                        setSelectedGenre={setSelectedGenre} \n                    />\n                    <Switch>\n                        <Route path=\"/\" exact>\n                            <MovieList movies={filteredMovies} />\n                        </Route>\n                        <Route path=\"/favorites\" component={FavoritesPage} />\n                    </Switch>\n                </div>\n            </Router>\n        </FavoritesProvider>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}