{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Documents\\\\Full Stack\\\\movie\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieList from './components/MovieList';\nimport SearchBar from './components/SearchBar';\nimport Filter from './components/Filter';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [query, setQuery] = useState('');\n\n  // **Paste your TMDB API key here**\n  const API_KEY = '9cf638953526fa26938d263df3a35fe2'; // Replace with your TMDB API key\n\n  const fetchMovies = async (searchQuery = '', filterType = '') => {\n    let url = `https://api.themoviedb.org/3/movie/${filterType || 'popular'}?api_key=${API_KEY}&language=ta`;\n    if (searchQuery) {\n      url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`;\n    }\n    const response = await axios.get(url);\n    setMovies(response.data.results);\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const handleSearch = query => {\n    fetchMovies(query);\n  };\n  const handleFilter = filterType => {\n    setFilter(filterType);\n    fetchMovies('', filterType);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Recommendation App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"YMJyBYy6xwVrrH/rVE+cQs3ksQE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieList","SearchBar","Filter","jsxDEV","_jsxDEV","App","_s","movies","setMovies","filter","setFilter","query","setQuery","API_KEY","fetchMovies","searchQuery","filterType","url","response","get","data","results","handleSearch","handleFilter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onFilter","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Documents/Full Stack/movie/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieList from './components/MovieList';\nimport SearchBar from './components/SearchBar';\nimport Filter from './components/Filter';\nimport './App.css';\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [filter, setFilter] = useState('');\n    const [query, setQuery] = useState('');\n\n    // **Paste your TMDB API key here**\n    const API_KEY = '9cf638953526fa26938d263df3a35fe2'; // Replace with your TMDB API key\n\n    const fetchMovies = async (searchQuery = '', filterType = '') => {\n        let url = `https://api.themoviedb.org/3/movie/${filterType || 'popular'}?api_key=${API_KEY}&language=ta`;\n        if (searchQuery) {\n            url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`;\n        }\n        const response = await axios.get(url);\n        setMovies(response.data.results);\n    };\n\n    useEffect(() => {\n        fetchMovies();\n    }, []);\n\n    const handleSearch = (query) => {\n        fetchMovies(query);\n    };\n\n    const handleFilter = (filterType) => {\n        setFilter(filterType);\n        fetchMovies('', filterType);\n    };\n\n    return (\n        <div className=\"app\">\n            <h1>Movie Recommendation App</h1>\n            <SearchBar onSearch={handleSearch} />\n            <Filter onFilter={handleFilter} />\n            <MovieList movies={movies} />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMgB,OAAO,GAAG,kCAAkC,CAAC,CAAC;;EAEpD,MAAMC,WAAW,GAAG,MAAAA,CAAOC,WAAW,GAAG,EAAE,EAAEC,UAAU,GAAG,EAAE,KAAK;IAC7D,IAAIC,GAAG,GAAG,sCAAsCD,UAAU,IAAI,SAAS,YAAYH,OAAO,cAAc;IACxG,IAAIE,WAAW,EAAE;MACbE,GAAG,GAAG,qDAAqDJ,OAAO,UAAUE,WAAW,EAAE;IAC7F;IACA,MAAMG,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAACF,GAAG,CAAC;IACrCT,SAAS,CAACU,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;EACpC,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZgB,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,YAAY,GAAIX,KAAK,IAAK;IAC5BG,WAAW,CAACH,KAAK,CAAC;EACtB,CAAC;EAED,MAAMY,YAAY,GAAIP,UAAU,IAAK;IACjCN,SAAS,CAACM,UAAU,CAAC;IACrBF,WAAW,CAAC,EAAE,EAAEE,UAAU,CAAC;EAC/B,CAAC;EAED,oBACIZ,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBrB,OAAA;MAAAqB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCzB,OAAA,CAACH,SAAS;MAAC6B,QAAQ,EAAER;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCzB,OAAA,CAACF,MAAM;MAAC6B,QAAQ,EAAER;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCzB,OAAA,CAACJ,SAAS;MAACO,MAAM,EAAEA;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEd,CAAC;AAACvB,EAAA,CAtCID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}